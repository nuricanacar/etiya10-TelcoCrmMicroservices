version: '3.8'

services:
 
  customerservicedb:
    container_name: customerservicedb
    image: postgres
    ports:
      - "5450:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=customerdb
    volumes:
      - "customer-data:/var/lib/postgresql/data"
  

  #Birden fazla node (örneğin kafka) bir arada çalışırken yönetmek için kullanılır

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # kafkanın zookeeper'a bağlanacağı port
      ZOOKEEPER_TICK_TIME: 2000 # zookeeper heartbeat interval değeri. kafka ile senkronizasyon için
    ports:
      - "2181:2181"
 
 
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper       # kafka başlamadan önce zookeeper container'ı başlamalı
    ports:
      - "9092:9092"  # iç (container network) erişim portu
      - "29092:29092" # Dış (localhost üzerinden) erişim portu
    
    environment:
      KAFKA_BROKER_ID: 1 # kafka broker kimliği - benzersiz id
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      #PLAINTEXT => DOCKER İÇİN NETWORK
      #PLAINTEXT_HOST => LOCALHOST
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      
      #KAFKANIN HANGİ ADRESLERDE DİNLEYECEĞİ(LISTENER BINDING)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=LocalCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_READONLY=false







volumes:
  customer-data: